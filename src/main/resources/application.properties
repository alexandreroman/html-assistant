spring.application.name=html-assistant

server.port=${PORT:8080}

management.server.port=8081
management.endpoints.web.exposure.include=health
management.endpoint.health.probes.enabled=true
management.endpoint.health.probes.add-additional-paths=true
management.endpoint.health.group.readiness.include[0]=readinessState
management.endpoint.health.group.readiness.include[1]=redis

spring.ai.openai.api-key=${OPENAI_API_KEY}
spring.ai.openai.chat.options.model=gpt-4o
spring.ai.openai.chat.options.temperature=0.8

spring.ai.mistralai.api-key=${MISTRALAI_API_KEY}
spring.ai.mistralai.chat.options.model=codestral-latest
spring.ai.mistralai.chat.options.temperature=0.8

spring.autoconfigure.exclude=org.springframework.ai.autoconfigure.openai.OpenAiAutoConfiguration
app.content.model=Mistral AI

# So far my tests have shown that current AI models don't seem to take into account
# HTML contents in the prompt. This makes no difference if you ask the model to generate
# something by reusing existing content and past instructions.
# You may set this flag to true to run your own tests.
app.content.include-history=false

app.content.prompt=You generate HTML 5 websites. \
    The content you generate is self-contained, as everything is saved in a single HTML file, including CSS and Javascript resources. \
    You may include links to external resources such as images if appropriate. \
    \
    Do not use via.placeholder.com for placeholder images, as this service is no longer available. \
    Please use dummyimage.com to generate placeholder images. \
    \
    Only include the result HTML source file in your answer, nothing more. \
    You must remove anything that is not HTML content. \
    Do not include your reasoning in your answer. Do not generate your thinking steps. \
    Adding Markdown formatting (such as "```html") is forbidden. Just return the plain HTML result.
